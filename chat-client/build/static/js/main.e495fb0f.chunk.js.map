{"version":3,"sources":["Utilities/history.js","Utilities/handle-response.js","Services/authenticationService.js","Utilities/private-route.js","Utilities/auth-header.js","Utilities/common.js","Chat/Users.jsx","Services/userService.js","Chat/ChatBox.jsx","Services/chatService.js","Chat/Conversations.jsx","Layout/Header.jsx","Chat/Chat.jsx","App.js","index.js"],"names":["history","createBrowserHistory","useHandleResponse","enqueueSnackbar","useSnackbar","response","text","then","data","JSON","parse","ok","indexOf","status","authenticationService","logout","variant","error","message","statusText","Promise","reject","currentUserSubject","BehaviorSubject","localStorage","getItem","removeItem","next","currentUser","asObservable","value","PrivateRoute","Component","component","rest","render","props","currentUserValue","to","pathname","state","from","location","authHeader","token","Authorization","name","String","split","map","i","charAt","join","useStyles","makeStyles","theme","subheader","display","alignItems","cursor","globe","backgroundColor","palette","primary","dark","subheaderText","color","list","maxHeight","overflowY","avatar","margin","spacing","Users","classes","useState","users","setUsers","newUser","setNewUser","getUsers","handleResponse","requestOptions","method","headers","fetch","process","REACT_APP_API_URL","catch","useGetUsers","useEffect","res","socketIOClient","on","List","className","Fragment","u","ListItem","listItem","onClick","setUser","setScope","button","ListItemAvatar","Avatar","commonUtilites","ListItemText","_id","root","height","headerRow","zIndex","paper","justifyContent","messageContainer","alignContent","messagesRow","newMessageRow","width","padding","messageBubble","border","borderRadius","boxShadow","marginTop","maxWidth","messageBubbleRight","inputRow","form","listItemRight","flexDirection","ChatBox","userId","currentUserId","newMessage","setNewMessage","messages","setMessages","lastMessage","setLastMessage","getGlobalMessages","useGetGlobalMessages","sendGlobalMessage","body","stringify","global","err","console","log","useSendGlobalMessage","getConversationMessages","id","useGetConversationMessages","sendConversationMessage","useSendConversationMessage","chatBottom","useRef","reloadMessages","scrollToBottom","scope","conversationId","user","current","scrollIntoView","behavior","Grid","container","item","xs","Paper","square","elevation","Typography","m","classnames","fromObj","secondary","ref","onSubmit","e","preventDefault","TextField","label","fullWidth","onChange","target","IconButton","type","Conversations","conversations","setConversations","newConversation","setNewConversation","getConversations","useGetConversations","handleRecipient","recipients","length","username","socket","removeListener","Divider","c","recipientObj","flexGrow","title","userDropdown","marginLeft","breakpoints","down","Header","anchorEl","setAnchorEl","dropdownOpen","setDropdownOpen","AppBar","position","Toolbar","Link","href","Button","aria-owns","undefined","aria-haspopup","event","currentTarget","Menu","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","push","minHeight","sidebar","Chat","tab","setTab","md","Tabs","newVal","indicatorColor","textColor","Tab","createMuiTheme","light","main","contrastText","background","default","typography","useNextVariants","App","ThemeProvider","CssBaseline","maxSnack","autoHideDuration","path","ReactDOM","document","getElementById"],"mappings":"kPAIeA,EAFCC,c,0BC2BDC,EAzBW,WAAO,IACrBC,EAAoBC,cAApBD,gBAqBR,OAnBuB,SAAAE,GACnB,OAAOA,EAASC,OAAOC,MAAK,SAAAD,GACxB,IAAME,EAAOF,GAAQG,KAAKC,MAAMJ,GAChC,IAAKD,EAASM,GAAI,EAC+B,IAAzC,CAAC,IAAK,KAAKC,QAAQP,EAASQ,UAC5BC,EAAsBC,SACtBZ,EAAgB,oBAAqB,CACjCa,QAAS,WAIjB,IAAMC,EAAST,GAAQA,EAAKU,SAAYb,EAASc,WACjD,OAAOC,QAAQC,OAAOJ,GAG1B,OAAOT,OCjBbc,EAAqB,IAAIC,IAC3Bd,KAAKC,MAAMc,aAAaC,QAAQ,iBAGvBX,EAAwB,CACjCC,OA4EJ,WACIS,aAAaE,WAAW,eACxBJ,EAAmBK,KAAK,OA7ExBC,YAAaN,EAAmBO,eAChC,uBACI,OAAOP,EAAmBQ,Q,WCcnBC,EAtBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAGJ,OADoBtB,EAAsBuB,iBAYnC,cAACL,EAAD,eAAeI,IAPd,cAAC,IAAD,CACIE,GAAI,CAAEC,SAAU,IAAKC,MAAO,CAAEC,KAAML,EAAMM,kB,mHCFnDC,MAZf,WACI,IAAMf,EAAcd,EAAsBuB,iBAC1C,OAAIT,GAAeA,EAAYgB,MACpB,CACHC,cAAc,GAAD,OAAKjB,EAAYgB,OAC9B,eAAgB,oBAGb,ICTA,MACQ,SAACE,GAIpB,OAHgBC,OAAOD,GACpBE,MAAM,KACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,OAAO,MACRC,KAAK,KCMlBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,OAAQ,WAEVC,MAAO,CACLC,gBAAiBN,EAAMO,QAAQC,QAAQC,MAEzCC,cAAe,CACbC,MAAOX,EAAMO,QAAQC,QAAQC,MAE/BG,KAAM,CACJC,UAAW,sBACXC,UAAW,QAEbC,OAAQ,CACNC,OAAQhB,EAAMiB,QAAQ,EAAG,EAAG,EAAG,QAiDpBC,EA7CD,SAACrC,GACb,IAAMsC,EAAUrB,IADO,EAEGsB,mBAAS,IAFZ,mBAEhBC,EAFgB,KAETC,EAFS,OAGOF,mBAAS,MAHhB,mBAGhBG,EAHgB,KAGPC,EAHO,KAIjBC,EChCD,WAAwB,IACnB7E,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IACjBgF,EAAiB,CACnBC,OAAQ,MACRC,QAASzC,KAgBb,OAbiB,WACb,OAAO0C,MAAM,GAAD,OACLC,mIAAYC,kBADP,cAERL,GAEC3E,KAAK0E,GACLO,OAAM,kBACHrF,EAAgB,uBAAwB,CACpCa,QAAS,cDgBVyE,GAejB,OAbAC,qBAAU,WACRV,IAAWzE,MAAK,SAACoF,GAAD,OAASd,EAASc,QAGpC,CAACb,IAEDY,qBAAU,WACOE,IAAeN,mIAAYC,mBACnCM,GAAG,SAAS,SAACrF,GAClBuE,EAAWvE,QAEZ,IAGD,cAACsF,EAAA,EAAD,CAAMC,UAAWrB,EAAQP,KAAzB,SACGS,GACC,cAAC,IAAMoB,SAAP,UACGpB,EAAM3B,KAAI,SAACgD,GAAD,OACT,eAACC,EAAA,EAAD,CACEH,UAAWrB,EAAQyB,SAEnBC,QAAS,WACPhE,EAAMiE,QAAQJ,GACd7D,EAAMkE,SAASL,EAAEnD,OAEnByD,QAAM,EAPR,UASE,cAACC,EAAA,EAAD,CAAgBT,UAAWrB,EAAQJ,OAAnC,SACE,cAACmC,EAAA,EAAD,UAASC,EAAmCT,EAAEnD,UAEhD,cAAC6D,EAAA,EAAD,CAAc5C,QAASkC,EAAEnD,SAVpBmD,EAAEW,a,qEElCrB,IAAMvD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsD,KAAM,CACJC,OAAQ,QAEVC,UAAW,CACT3C,UAAW,GACX4C,OAAQ,GAEVC,MAAO,CACLxD,QAAS,OACTC,WAAY,SACZwD,eAAgB,SAChBJ,OAAQ,OACR5C,MAAOX,EAAMO,QAAQC,QAAQC,MAE/BmD,iBAAkB,CAChBL,OAAQ,OACRrD,QAAS,OACT2D,aAAc,YAEhBC,YAAa,CACXjD,UAAW,sBACXC,UAAW,QAEbiD,cAAe,CACbC,MAAO,OACPC,QAASjE,EAAMiB,QAAQ,EAAG,EAAG,IAE/BiD,cAAe,CACbD,QAAS,GACTE,OAAQ,kBACR7D,gBAAiB,QACjB8D,aAAc,mBACdC,UAAW,oCACXC,UAAW,EACXC,SAAU,QAEZC,mBAAoB,CAClBJ,aAAc,oBAEhBK,SAAU,CACRvE,QAAS,OACTC,WAAY,YAEduE,KAAM,CACJV,MAAO,QAETjD,OAAQ,CACNC,OAAQhB,EAAMiB,QAAQ,EAAG,MAE3B2B,SAAU,CACR1C,QAAS,OACT8D,MAAO,QAETW,cAAe,CACbC,cAAe,mBA2IJC,EAvIC,SAAChG,GAAW,IAAD,EACDuC,mBACtB7D,EAAsBuB,iBAAiBgG,QADlCC,EADkB,sBAIW3D,mBAAS,IAJpB,mBAIlB4D,EAJkB,KAINC,EAJM,OAKO7D,mBAAS,IALhB,mBAKlB8D,EALkB,KAKRC,EALQ,OAMa/D,mBAAS,MANtB,mBAMlBgE,EANkB,KAMLC,EANK,KAQnBC,ECtFD,WAAiC,IAC5B1I,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IACjBgF,EAAiB,CACnBC,OAAQ,MACRC,QAASzC,KAgBb,OAb0B,WACtB,OAAO0C,MAAM,GAAD,OACLC,mIAAYC,kBADP,wBAERL,GAEC3E,KAAK0E,GACLO,OAAM,kBACHrF,EAAgB,6BAA8B,CAC1Ca,QAAS,cDsED8H,GACpBC,EC9DD,WAAiC,IAC5B5I,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IAsBvB,OApB0B,SAAA8I,GACtB,IAAM9D,EAAiB,CACnBC,OAAQ,OACRC,QAASzC,IACTqG,KAAMvI,KAAKwI,UAAU,CAAED,KAAMA,EAAME,QAAQ,KAG/C,OAAO7D,MAAM,GAAD,OACLC,mIAAYC,kBADP,wBAERL,GAEC3E,KAAK0E,GACLO,OAAM,SAAA2D,GACHC,QAAQC,IAAIF,GACZhJ,EAAgB,qBAAsB,CAClCa,QAAS,cD2CDsI,GACpBC,ECTD,WAAuC,IAClCpJ,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IACjBgF,EAAiB,CACnBC,OAAQ,MACRC,QAASzC,KAkBb,OAfgC,SAAA6G,GAC5B,OAAOnE,MAAM,GAAD,OAEJC,mIAAYC,kBAFR,oDAGoCiE,GAC5CtE,GAEC3E,KAAK0E,GACLO,OAAM,kBACHrF,EAAgB,uBAAwB,CACpCa,QAAS,cDTKyI,GAC1BC,ECgBD,WAAuC,IAClCvJ,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IAsBvB,OApBgC,SAACsJ,EAAIR,GACjC,IAAM9D,EAAiB,CACnBC,OAAQ,OACRC,QAASzC,IACTqG,KAAMvI,KAAKwI,UAAU,CAAE3G,GAAIkH,EAAIR,KAAMA,KAGzC,OAAO3D,MAAM,GAAD,OACLC,mIAAYC,kBADP,kBAERL,GAEC3E,KAAK0E,GACLO,OAAM,SAAA2D,GACHC,QAAQC,IAAIF,GACZhJ,EAAgB,qBAAsB,CAClCa,QAAS,cDnCK2I,GAE5BC,EAAaC,iBAAO,MAClBnF,EAAUrB,IAEhBqC,qBAAU,WACRoE,IACAC,MAGF,CAACpB,EAAavG,EAAM4H,MAAO5H,EAAM6H,iBAEjCvE,qBAAU,WACOE,IAAeN,mIAAYC,mBACnCM,GAAG,YAAY,SAACrF,GAAD,OAAUoI,EAAepI,QAC9C,IAEH,IAAMsJ,EAAiB,WACD,gBAAhB1H,EAAM4H,MACRnB,IAAoBtI,MAAK,SAACoF,GACxB+C,EAAY/C,MAEW,OAAhBvD,EAAM4H,OAA2C,OAAzB5H,EAAM6H,eACvCV,EAAwBnH,EAAM8H,KAAKtD,KAAKrG,MAAK,SAACoF,GAAD,OAAS+C,EAAY/C,MAElE+C,EAAY,KAIVqB,EAAiB,WACrBH,EAAWO,QAAQC,eAAe,CAAEC,SAAU,YAGhD3E,oBAAUqE,EAAgB,CAACtB,IAe3B,OACE,eAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACxE,UAAWrB,EAAQmC,KAAnC,UACE,cAACyD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI1E,UAAWrB,EAAQqC,UAAtC,SACE,cAAC2D,EAAA,EAAD,CAAO3E,UAAWrB,EAAQuC,MAAO0D,QAAM,EAACC,UAAW,EAAnD,SACE,cAACC,EAAA,EAAD,CAAY3G,MAAM,UAAUlD,QAAQ,KAApC,SACGoB,EAAM4H,YAIb,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACxE,UAAWrB,EAAQyC,iBAAnC,UACE,eAACmD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI1E,UAAWrB,EAAQ2C,YAAtC,UACGoB,GACC,cAAC3C,EAAA,EAAD,UACG2C,EAASxF,KAAI,SAAC6H,GAAD,OACZ,eAAC5E,EAAA,EAAD,CAEEH,UAAWgF,IAAWrG,EAAQyB,SAAT,yBACfzB,EAAQwD,eACV4C,EAAEE,QAAQ,GAAGpE,MAAQ0B,IAEzB5E,WAAW,aANb,UAQE,cAAC8C,EAAA,EAAD,CAAgBT,UAAWrB,EAAQJ,OAAnC,SACE,cAACmC,EAAA,EAAD,UACGC,EAAmCoE,EAAEE,QAAQ,GAAGlI,UAGrD,cAAC6D,EAAA,EAAD,CACEjC,QAAS,CACPmC,KAAMkE,IAAWrG,EAAQ+C,cAAT,yBACV/C,EAAQqD,oBACV+C,EAAEE,QAAQ,GAAGpE,MAAQ0B,KAG3BvE,QAAS+G,EAAEE,QAAQ,IAAMF,EAAEE,QAAQ,GAAGlI,KACtCmI,UAAW,cAAC,IAAMjF,SAAP,UAAiB8E,EAAE9B,WApB3B8B,EAAElE,UA0Bf,qBAAKsE,IAAKtB,OAEZ,cAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI1E,UAAWrB,EAAQsD,SAAtC,SACE,sBAAMmD,SA1DK,SAACC,GACpBA,EAAEC,iBACkB,gBAAhBjJ,EAAM4H,MACRjB,EAAkBR,GAAYhI,MAAK,WACjCiI,EAAc,OAGhBkB,EAAwBtH,EAAM8H,KAAKtD,IAAK2B,GAAYhI,MAAK,SAACoF,GACxD6C,EAAc,QAkDoBzC,UAAWrB,EAAQuD,KAAjD,SACE,eAACqC,EAAA,EAAD,CACEC,WAAS,EACTxE,UAAWrB,EAAQ4C,cACnB5D,WAAW,WAHb,UAKE,cAAC4G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACa,EAAA,EAAD,CACE9B,GAAG,UACH+B,MAAM,UACNvK,QAAQ,WACRuD,OAAO,QACPiH,WAAS,EACT1J,MAAOyG,EACPkD,SAAU,SAACL,GAAD,OAAO5C,EAAc4C,EAAEM,OAAO5J,YAG5C,cAACwI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CAAYC,KAAK,SAAjB,SACE,cAAC,IAAD,wB,2BEhMdvI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,OAAQ,WAEVC,MAAO,CACLC,gBAAiBN,EAAMO,QAAQC,QAAQC,MAEzCC,cAAe,CACbC,MAAOX,EAAMO,QAAQC,QAAQC,MAE/BG,KAAM,CACJC,UAAW,sBACXC,UAAW,YAuFAwH,EAnFO,SAACzJ,GACrB,IAAMsC,EAAUrB,IADe,EAEWsB,mBAAS,IAFpB,mBAExBmH,EAFwB,KAETC,EAFS,OAGepH,mBAAS,MAHxB,mBAGxBqH,EAHwB,KAGPC,EAHO,KAIzBC,EDsBD,WAAgC,IAC3B/L,EAAoBC,cAApBD,gBACF8E,EAAiB/E,IACjBgF,EAAiB,CACnBC,OAAQ,MACRC,QAASzC,KAgBb,OAbyB,WACrB,OAAO0C,MAAM,GAAD,OACLC,mIAAYC,kBADP,+BAERL,GAEC3E,KAAK0E,GACLO,OAAM,kBACHrF,EAAgB,uBAAwB,CACpCa,QAAS,cCtCFmL,GAInBC,EAAkB,SAACC,GACvB,IAAK,IAAInJ,EAAI,EAAGA,EAAImJ,EAAWC,OAAQpJ,IACrC,GACEmJ,EAAWnJ,GAAGqJ,WACdzL,EAAsBuB,iBAAiBkK,SAEvC,OAAOF,EAAWnJ,GAGtB,OAAO,MAkBT,OAfAwC,qBAAU,WACRwG,IAAmB3L,MAAK,SAACoF,GAAD,OAASoG,EAAiBpG,QAGpD,CAACqG,IAEDtG,qBAAU,WACR,IAAI8G,EAAS5G,IAAeN,mIAAYC,mBAGxC,OAFAiH,EAAO3G,GAAG,YAAY,SAACrF,GAAD,OAAUyL,EAAmBzL,MAE5C,WACLgM,EAAOC,eAAe,eAEvB,IAGD,eAAC3G,EAAA,EAAD,CAAMC,UAAWrB,EAAQP,KAAzB,UACE,eAAC+B,EAAA,EAAD,CACExB,QAAS,CAAEmC,KAAMnC,EAAQlB,WACzB4C,QAAS,WACPhE,EAAMkE,SAAS,gBAHnB,UAME,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQV,UAAWrB,EAAQd,MAA3B,SACE,cAAC,IAAD,QAGJ,cAAC+C,EAAA,EAAD,CAAcZ,UAAWrB,EAAQT,cAAeF,QAAQ,mBAE1D,cAAC2I,EAAA,EAAD,IAECZ,GACC,cAAC,IAAM9F,SAAP,UACG8F,EAAc7I,KAAI,SAAC0J,GAAD,OACjB,eAACzG,EAAA,EAAD,CACEH,UAAWrB,EAAQyB,SAEnBI,QAAM,EACNH,QAAS,WACPhE,EAAMiE,QAAQ+F,EAAgBO,EAAEC,eAChCxK,EAAMkE,SAAS8F,EAAgBO,EAAEC,cAAc9J,OANnD,UASE,cAAC0D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGC,EACC0F,EAAgBO,EAAEC,cAAc9J,UAItC,cAAC6D,EAAA,EAAD,CACE5C,QAASqI,EAAgBO,EAAEC,cAAc9J,KACzCmI,UAAW,cAAC,IAAMjF,SAAP,UAAiB2G,EAAEhE,kBAhB3BgE,EAAE/F,c,sGC3EfvD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCsD,KAAM,CACFgG,SAAU,GAEdC,MAAO,CACHD,SAAU,EACVpJ,QAAS,QAEbsJ,aAAa,aACTC,WAAYzJ,EAAMiB,QAAQ,GAC1BgD,QAASjE,EAAMiB,QAAQ,IACtBjB,EAAM0J,YAAYC,KAAK,MAAQ,CAC5BF,WAAY,aA0ETG,GArEA,WAAO,IAAD,EACKxI,mBAAS7D,EAAsBuB,kBAA9CT,EADU,sBAEe+C,mBAAS,MAFxB,mBAEVyI,EAFU,KAEAC,EAFA,OAGuB1I,oBAAS,GAHhC,mBAGV2I,EAHU,KAGIC,EAHJ,KA2BX7I,EAAUrB,KAEhB,OACI,qBAAK0C,UAAWrB,EAAQmC,KAAxB,SACI,cAAC2G,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAMC,KAAK,IAAI7H,UAAWrB,EAAQoI,QAGlC,eAACe,GAAA,EAAD,CACIC,YAAWV,EAAW,mBAAgBW,EACtCC,gBAAc,OACd5H,QA7BG,SAAA6H,GACnBV,GAAgB,GAChBF,EAAYY,EAAMC,gBA4BFnI,UAAWrB,EAAQqI,aACnB7I,MAAM,UALV,UAOKtC,EAAYkB,KAtBzBwK,EACO,cAAC,KAAD,IAEJ,cAAC,KAAD,OAsBK,cAACa,GAAA,EAAD,CACI3E,GAAG,cACH4D,SAAUA,EACVgB,KAAMC,QAAQjB,GACdkB,QA7CI,WACpBf,GAAgB,GAChBF,EAAY,OA4CIkB,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAZpB,SAeI,cAACE,GAAA,EAAD,CAAUxI,QA9CT,WACjBtF,EAAsBC,SACtBf,EAAQ6O,KAAK,MA4CG,8BC9ElBxL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0D,MACA,CACI6H,UAAW,qBACXnH,aAAc,GAElBoH,QACA,CACI/H,OAAQ,GAEZxD,UACA,CACIC,QAAS,OACTC,WAAY,SACZC,OAAQ,WAEZC,MACA,CACIC,gBAAiBN,EAAMO,QAAQC,QAAQC,MAE3CC,cACA,CACIC,MAAOX,EAAMO,QAAQC,QAAQC,UAmDtBgL,GA/CF,WAAO,IAAD,EACWrK,mBAAS,eADpB,mBACRqF,EADQ,KACD1D,EADC,OAEO3B,mBAAS,GAFhB,mBAERsK,EAFQ,KAEHC,EAFG,OAGSvK,mBAAS,MAHlB,mBAGRuF,EAHQ,KAGF7D,EAHE,KAIT3B,EAAUrB,KAMhB,OACI,eAAC,IAAM2C,SAAP,WACI,cAAC,GAAD,IACA,eAACsE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAAC2E,GAAI,EAAGpJ,UAAWrB,EAAQqK,QAArC,SACI,eAACrE,EAAA,EAAD,CAAO3E,UAAWrB,EAAQuC,MAAO0D,QAAM,EAACC,UAAW,EAAnD,UACI,cAACF,EAAA,EAAD,CAAOC,QAAM,EAAb,SACI,eAACyE,EAAA,EAAD,CACI3D,SAZP,SAACL,EAAGiE,GACrBH,EAAOG,IAYiBrO,QAAQ,YACRc,MAAOmN,EACPK,eAAe,UACfC,UAAU,UALd,UAOI,cAACC,EAAA,EAAD,CAAKjE,MAAM,UACX,cAACiE,EAAA,EAAD,CAAKjE,MAAM,eAGV,IAAR0D,GACG,cAAC,EAAD,CACI5I,QAASA,EACTC,SAAUA,IAGT,IAAR2I,GACG,cAAC,EAAD,CAAO5I,QAASA,EAASC,SAAUA,SAI/C,cAACgE,EAAA,EAAD,CAAME,MAAI,EAAC2E,GAAI,EAAf,SACI,cAAC,EAAD,CAASnF,MAAOA,EAAOE,KAAMA,aCpE3C3G,GAAQkM,YAAe,CACzB3L,QAAS,CACLC,QAAS,CACL2L,MAAO,UACPC,KAAM,UACN3L,KAAM,WAEViH,UAAW,CACPyE,MAAO,UACPC,KAAM,UACN3L,KAAM,UACN4L,aAAc,WAElBC,WAAY,CACRC,QAAS,YAGjBC,WAAY,CACRC,iBAAiB,KAkBVC,OAdf,WACI,OACI,eAACC,EAAA,EAAD,CAAe3M,MAAOA,GAAtB,UACI,cAAC4M,EAAA,EAAD,IACA,cAAC,IAAD,CAAkBC,SAAU,EAAGC,iBAAkB,IAAjD,SACI,cAAC,IAAD,CAAQrQ,QAASA,EAAjB,SAEI,cAAC,EAAD,CAAcsQ,KAAK,QAAQrO,UAAW+M,aCrC1DuB,IAASpO,OACL,cAAC,GAAD,IACFqO,SAASC,eAAe,W","file":"static/js/main.e495fb0f.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { useSnackbar } from 'notistack';\n\nimport { authenticationService } from '../Services/authenticationService';\n\nconst useHandleResponse = () => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleResponse = response => {\n        return response.text().then(text => {\n            const data = text && JSON.parse(text);\n            if (!response.ok) {\n                if ([401, 403].indexOf(response.status) !== -1) {\n                    authenticationService.logout();\n                    enqueueSnackbar('User Unauthorized', {\n                        variant: 'error',\n                    });\n                }\n\n                const error = (data && data.message) || response.statusText;\n                return Promise.reject(error);\n            }\n\n            return data;\n        });\n    };\n\n    return handleResponse;\n};\n\nexport default useHandleResponse;\n","import { BehaviorSubject } from 'rxjs';\nimport { useSnackbar } from 'notistack';\n\nimport useHandleResponse from '../Utilities/handle-response';\n\nconst currentUserSubject = new BehaviorSubject(\n    JSON.parse(localStorage.getItem('currentUser'))\n);\n\nexport const authenticationService = {\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() {\n        return currentUserSubject.value;\n    },\n};\n\nexport function useLogin() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const login = (username, password) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users/login`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .then(user => {\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                currentUserSubject.next(user);\n                return user;\n            })\n            .catch(function() {\n                enqueueSnackbar('Failed to Login', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return login;\n}\n\nexport function useRegister() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const register = (name, username, password, password2) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name, username, password, password2 }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users/register`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .then(user => {\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                currentUserSubject.next(user);\n\n                return user;\n            })\n            .catch(function(response) {\n                if (response) {\n                    enqueueSnackbar(response, {\n                        variant: 'error',\n                    });\n                } else {\n                    enqueueSnackbar('Failed to Register', {\n                        variant: 'error',\n                    });\n                }\n            });\n    };\n\n    return register;\n}\n\nfunction logout() {\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../Services/authenticationService';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n          {\n            const currentUser = authenticationService.currentUserValue;\n            if (!currentUser)\n            {\n                // not logged in so redirect to login page with the return url\n                return (\n                    <Redirect\n                        to={{ pathname: '/', state: { from: props.location } }}\n                    />\n                );\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\nexport default PrivateRoute;\n","import { authenticationService } from '../Services/authenticationService';\n\nfunction authHeader() {\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return {\n            Authorization: `${currentUser.token}`,\n            'Content-Type': 'application/json',\n        };\n    } else {\n        return {};\n    }\n}\n\nexport default authHeader;\n","// eslint-disable-next-line\nexport default {\n  getInitialsFromName: (name) => {\n    const letters = String(name)\n      .split(\" \")\n      .map((i) => i.charAt(0));\n    return letters.join(\"\");\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetUsers } from \"../Services/userService\";\nimport commonUtilites from \"../Utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n  avatar: {\n    margin: theme.spacing(0, 3, 0, 1),\n  },\n}));\n\nconst Users = (props) => {\n  const classes = useStyles();\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState(null);\n  const getUsers = useGetUsers();\n\n  useEffect(() => {\n    getUsers().then((res) => setUsers(res));\n  },\n  // eslint-disable-next-line \n  [newUser]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"users\", (data) => {\n      setNewUser(data);\n    });\n  }, []);\n\n  return (\n    <List className={classes.list}>\n      {users && (\n        <React.Fragment>\n          {users.map((u) => (\n            <ListItem\n              className={classes.listItem}\n              key={u._id}\n              onClick={() => {\n                props.setUser(u);\n                props.setScope(u.name);\n              }}\n              button\n            >\n              <ListItemAvatar className={classes.avatar}>\n                <Avatar>{commonUtilites.getInitialsFromName(u.name)}</Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={u.name} />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Users;\n","import { useSnackbar } from 'notistack';\n\nimport useHandleResponse from '../Utilities/handle-response';\nimport authHeader from '../Utilities/auth-header';\n\nexport function useGetUsers() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getUsers = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load Users', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getUsers;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport socketIOClient from \"socket.io-client\";\nimport classnames from \"classnames\";\n\nimport commonUtilites from \"../Utilities/common\";\nimport {\n  useGetGlobalMessages,\n  useSendGlobalMessage,\n  useGetConversationMessages,\n  useSendConversationMessage,\n} from \"../Services/chatService\";\nimport { authenticationService } from \"../Services/authenticationService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  headerRow: {\n    maxHeight: 60,\n    zIndex: 5,\n  },\n  paper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    color: theme.palette.primary.dark,\n  },\n  messageContainer: {\n    height: \"100%\",\n    display: \"flex\",\n    alignContent: \"flex-end\",\n  },\n  messagesRow: {\n    maxHeight: \"calc(100vh - 184px)\",\n    overflowY: \"auto\",\n  },\n  newMessageRow: {\n    width: \"100%\",\n    padding: theme.spacing(0, 2, 1),\n  },\n  messageBubble: {\n    padding: 10,\n    border: \"1px solid white\",\n    backgroundColor: \"white\",\n    borderRadius: \"0 10px 10px 10px\",\n    boxShadow: \"-3px 4px 4px 0px rgba(0,0,0,0.08)\",\n    marginTop: 8,\n    maxWidth: \"40em\",\n  },\n  messageBubbleRight: {\n    borderRadius: \"10px 0 10px 10px\",\n  },\n  inputRow: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  avatar: {\n    margin: theme.spacing(1, 1.5),\n  },\n  listItem: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  listItemRight: {\n    flexDirection: \"row-reverse\",\n  },\n}));\n\nconst ChatBox = (props) => {\n  const [currentUserId] = useState(\n    authenticationService.currentUserValue.userId\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [lastMessage, setLastMessage] = useState(null);\n\n  const getGlobalMessages = useGetGlobalMessages();\n  const sendGlobalMessage = useSendGlobalMessage();\n  const getConversationMessages = useGetConversationMessages();\n  const sendConversationMessage = useSendConversationMessage();\n\n  let chatBottom = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    reloadMessages();\n    scrollToBottom();\n  },\n  // eslint-disable-next-line\n  [lastMessage, props.scope, props.conversationId]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setLastMessage(data));\n  }, []);\n\n  const reloadMessages = () => {\n    if (props.scope === \"Global Chat\") {\n      getGlobalMessages().then((res) => {\n        setMessages(res);\n      });\n    } else if (props.scope !== null && props.conversationId !== null) {\n      getConversationMessages(props.user._id).then((res) => setMessages(res));\n    } else {\n      setMessages([]);\n    }\n  };\n\n  const scrollToBottom = () => {\n    chatBottom.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.scope === \"Global Chat\") {\n      sendGlobalMessage(newMessage).then(() => {\n        setNewMessage(\"\");\n      });\n    } else {\n      sendConversationMessage(props.user._id, newMessage).then((res) => {\n        setNewMessage(\"\");\n      });\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12} className={classes.headerRow}>\n        <Paper className={classes.paper} square elevation={2}>\n          <Typography color=\"inherit\" variant=\"h6\">\n            {props.scope}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container className={classes.messageContainer}>\n          <Grid item xs={12} className={classes.messagesRow}>\n            {messages && (\n              <List>\n                {messages.map((m) => (\n                  <ListItem\n                    key={m._id}\n                    className={classnames(classes.listItem, {\n                      [`${classes.listItemRight}`]:\n                        m.fromObj[0]._id === currentUserId,\n                    })}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar className={classes.avatar}>\n                      <Avatar>\n                        {commonUtilites.getInitialsFromName(m.fromObj[0].name)}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      classes={{\n                        root: classnames(classes.messageBubble, {\n                          [`${classes.messageBubbleRight}`]:\n                            m.fromObj[0]._id === currentUserId,\n                        }),\n                      }}\n                      primary={m.fromObj[0] && m.fromObj[0].name}\n                      secondary={<React.Fragment>{m.body}</React.Fragment>}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            <div ref={chatBottom} />\n          </Grid>\n          <Grid item xs={12} className={classes.inputRow}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n              <Grid\n                container\n                className={classes.newMessageRow}\n                alignItems=\"flex-end\"\n              >\n                <Grid item xs={11}>\n                  <TextField\n                    id=\"message\"\n                    label=\"Message\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton type=\"submit\">\n                    <SendIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChatBox;\n","import { useSnackbar } from 'notistack';\n\nimport useHandleResponse from '../Utilities/handle-response';\nimport authHeader from '../Utilities/auth-header';\n\n// Receive global messages\nexport function useGetGlobalMessages() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getGlobalMessages = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/global`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load Global Chat', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getGlobalMessages;\n}\n\n// Send a global message\nexport function useSendGlobalMessage() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const sendGlobalMessage = body => {\n        const requestOptions = {\n            method: 'POST',\n            headers: authHeader(),\n            body: JSON.stringify({ body: body, global: true }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/global`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(err => {\n                console.log(err);\n                enqueueSnackbar('Could send message', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return sendGlobalMessage;\n}\n\n// Get list of users conversations\nexport function useGetConversations() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getConversations = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/conversations`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load chats', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getConversations;\n}\n\n// get conversation messages based on\n// to and from id's\nexport function useGetConversationMessages() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getConversationMessages = id => {\n        return fetch(\n            `${\n                process.env.REACT_APP_API_URL\n            }/api/messages/conversations/query?userId=${id}`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load chats', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getConversationMessages;\n}\n\nexport function useSendConversationMessage() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const sendConversationMessage = (id, body) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: authHeader(),\n            body: JSON.stringify({ to: id, body: body }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(err => {\n                console.log(err);\n                enqueueSnackbar('Could send message', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return sendConversationMessage;\n}\n","import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetConversations } from \"../Services/chatService\";\nimport { authenticationService } from \"../Services/authenticationService\";\nimport commonUtilites from \"../Utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n}));\n\nconst Conversations = (props) => {\n  const classes = useStyles();\n  const [conversations, setConversations] = useState([]);\n  const [newConversation, setNewConversation] = useState(null);\n  const getConversations = useGetConversations();\n\n  // Returns the recipient name that does not\n  // belong to the current user.\n  const handleRecipient = (recipients) => {\n    for (let i = 0; i < recipients.length; i++) {\n      if (\n        recipients[i].username !==\n        authenticationService.currentUserValue.username\n      ) {\n        return recipients[i];\n      }\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    getConversations().then((res) => setConversations(res));\n  },\n  // eslint-disable-next-line \n  [newConversation]);\n\n  useEffect(() => {\n    let socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setNewConversation(data));\n\n    return () => {\n      socket.removeListener(\"messages\");\n    };\n  }, []);\n\n  return (\n    <List className={classes.list}>\n      <ListItem\n        classes={{ root: classes.subheader }}\n        onClick={() => {\n          props.setScope(\"Global Chat\");\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.globe}>\n            <LanguageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText className={classes.subheaderText} primary=\"Global Chat\" />\n      </ListItem>\n      <Divider />\n\n      {conversations && (\n        <React.Fragment>\n          {conversations.map((c) => (\n            <ListItem\n              className={classes.listItem}\n              key={c._id}\n              button\n              onClick={() => {\n                props.setUser(handleRecipient(c.recipientObj));\n                props.setScope(handleRecipient(c.recipientObj).name);\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {commonUtilites.getInitialsFromName(\n                    handleRecipient(c.recipientObj).name\n                  )}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={handleRecipient(c.recipientObj).name}\n                secondary={<React.Fragment>{c.lastMessage}</React.Fragment>}\n              />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Conversations;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { authenticationService } from '../Services/authenticationService';\nimport history from '../Utilities/history';\n//import logo from './logo.png';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        display: 'flex',\n    },\n    userDropdown: {\n        marginLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: 'auto',\n        },\n    },\n}));\n\nconst Header = () => {\n    const [currentUser] = useState(authenticationService.currentUserValue);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const handleDropClose = () => {\n        setDropdownOpen(false);\n        setAnchorEl(null);\n    };\n\n    const handleDropOpen = event => {\n        setDropdownOpen(true);\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleLogout = () => {\n        authenticationService.logout();\n        history.push('/');\n    };\n\n    const arrowIcon = () => {\n        if (dropdownOpen) {\n            return <ArrowDropUpIcon />;\n        }\n        return <ArrowDropDownIcon />;\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Link href=\"/\" className={classes.title}>\n                        {/* <img src={logo} alt=\"Logo\" /> */}\n                    </Link>\n                    <Button\n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleDropOpen}\n                        className={classes.userDropdown}\n                        color=\"inherit\"\n                    >\n                        {currentUser.name}\n                        {arrowIcon()}\n                    </Button>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={handleDropClose}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                    >\n                        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Header;\n","// eslint-disable-next-line\nimport React, {useState, useEffect} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n// eslint-disable-next-line\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Users from \"./Users\";\nimport ChatBox from \"./ChatBox\";\nimport Conversations from \"./Conversations\";\nimport Header from \"../Layout/Header\";\n\nconst useStyles = makeStyles(theme => ({\n    paper:\n    {\n        minHeight: 'calc(100vh - 64px)',\n        borderRadius: 0,\n    },\n    sidebar:\n    {\n        zIndex: 8,\n    },\n    subheader:\n    {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    globe:\n    {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    subheaderText:\n    {\n        color: theme.palette.primary.dark,\n    },\n}));\n\nconst Chat = () => {\n    const [scope, setScope] = useState('Global Chat');\n    const [tab, setTab] = useState(0);\n    const [user, setUser] = useState(null);\n    const classes = useStyles();\n\n    const handleChange = (e, newVal) => {\n        setTab(newVal);\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <Grid container>\n                <Grid item md={4} className={classes.sidebar}>\n                    <Paper className={classes.paper} square elevation={5}>\n                        <Paper square>\n                            <Tabs\n                                onChange={handleChange}\n                                variant=\"fullWidth\"\n                                value={tab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label=\"Chats\" />\n                                <Tab label=\"Users\" />\n                            </Tabs>\n                        </Paper>\n                        {tab === 0 && (\n                            <Conversations\n                                setUser={setUser}\n                                setScope={setScope}\n                            />\n                        )}\n                        {tab === 1 && (\n                            <Users setUser={setUser} setScope={setScope} />\n                        )}\n                    </Paper>\n                </Grid>\n                <Grid item md={8}>\n                    <ChatBox scope={scope} user={user} />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default Chat;\n","import React from \"react\";\n// eslint-disable-next-line\nimport { Router, Route } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { SnackbarProvider } from 'notistack';\n\nimport history from './Utilities/history';\nimport PrivateRoute from './Utilities/private-route';\n//import Home from './Home/Home';\nimport Chat from './Chat/Chat';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#004c8c',\n        },\n        secondary: {\n            light: '#ffd95a',\n            main: '#f9a825',\n            dark: '#c17900',\n            contrastText: '#212121',\n        },\n        background: {\n            default: '#f0f0f0',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <SnackbarProvider maxSnack={3} autoHideDuration={3000}>\n                <Router history={history}>\n                    {/* <Route path=\"/\" exact component={Home} /> */}\n                    <PrivateRoute path=\"/chat\" component={Chat} />\n                </Router>\n            </SnackbarProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}